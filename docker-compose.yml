version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: cbl-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: cbl_root_password
      MYSQL_DATABASE: cbl_ordres
      MYSQL_USER: cbl_user
      MYSQL_PASSWORD: cbl_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql
      - ./uploads:/app/uploads
    networks:
      - cbl-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: cbl-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: cbl_user
      DB_PASSWORD: cbl_password
      DB_NAME: cbl_ordres
    ports:
      - "3002:3001"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - cbl-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: cbl-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - cbl-network

volumes:
  mysql_data:
    driver: local

networks:
  cbl-network:
    driver: bridge
